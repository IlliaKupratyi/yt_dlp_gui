import re

from src.core.dataclass.subtitle import Subtitles

_WHITESPACE_GROUP_RE = re.compile(r'\s{2,}')


"""
Parse the yt-dlp output to extract two subtitle lists:
    """
def subtitles_parse_output(subtitles_str: list[str]) -> Subtitles:
    autogenerated_subtitles = _get_subtitles(subtitles_str, "[info] Available automatic captions for ")
    available_subtitles = _get_subtitles(subtitles_str, "[info] Available subtitles for ")

    return Subtitles(available_subtitles,autogenerated_subtitles)

"""
Extract subtitle entries that appear after a given section prefix.
Parses lines into dictionaries with 'Language', 'Name', and 'Formats'.
Uses multi-whitespace splitting to correctly handle names with spaces.
"""
def _get_subtitles(subtitles_str: list[str], prefix: str = "") -> list[dict[str, str]]:
    subs: list[dict[str, str]] = []
    in_table = False

    for line in subtitles_str:
        if not isinstance(line, str):
            continue

        if line.startswith(prefix) and len(line) > len(prefix):
            in_table = True
            continue

        if not in_table:
            continue

        if line.strip().startswith("Language"):
            continue

        if not line.strip():
            break

        parts = _WHITESPACE_GROUP_RE.split(line.strip())

        if len(parts) < 3:
            continue

        language = parts[0]
        name = parts[1]
        formats_raw = parts[2]

        formats = " ".join(f.strip() for f in formats_raw.split(",") if f.strip())

        subs.append({
            "Language": language,
            "Name": name.strip(),
            "Formats": formats
        })

    return subs
